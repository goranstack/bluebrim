package com.bluebrim.xml.shared;
import org.apache.crimson.tree.*;
import org.w3c.dom.*;

/**
 * Interface implementented by xml builders
 */
public interface CoXmlBuilderIF {
	/**
	*	Constants used to indicate whether to connect nodes after resolvning builder
	*/
	public static final boolean CONNECT = true;
	public static final boolean NO_CONNECT = false;

	public Node exportChar(String tag, Character exportMe);

	/**
	 * Adds a comment to the builders' current node
	 * <p>
	 * Creation date: (9/6/99 11:39:50 AM)
	 */
	public void addComment(String comment);

	/**
	 * Adds a named subnode under which any subsequent nodes, data and attributes are exported.
	 *
	 * @deprecated in favor of {@link addSubNode(String, String[])}
	 */
	public void addSubNode(String nodeName);

	/**
	 * Start a sub-node.
	 *
	 * @param nodeName The name of the new node.
	 *
	 * @param nodeAttributes An array containing attribute names and their values.
	 *       The first string in the array is an attribute name, the second a value,
	 *       the third a name and so on.  Passing this method an array with an uneven
	 *       number of members should trigger an assertion.
	 */
	void addSubNode(String nodeName, String[] nodeAttributes);

	/**
	 * Connects this builder's node with the supplied builder's node (as a child)
	 * <p>
	 * Creation date: (1999-09-07 15:26:06)
	 */
	public void connectBuilderNodes(CoXmlBuilderIF builder);

	/**
	 * Exports name as an attribute.
	 * <p>
	 * Creation date: (1999-09-03 11:07:28)
	 * @param name The name of the attribute
	 * @param value The attribute value.  Must not contain the any double quote characters.
	 */
	public void exportAttribute(String name, String value);

	/**
	 * Add the <code>Node</code> (and any children) to the DOM tree.
	 */
	public void exportNode(Node node);

	/**
	 *	Exports an object as a property element
	 */
	public void exportProperty(String key, Object val);

	/**
	 * Exports a String to the XML file
	 *
	 * @param tag What tag to use
	 *
	 * @param exportMe What to export
	 */

	// FIXME: Is there any reason why this method couldn't be named just "export"?
	// FIXME:   //Johan Walles (2001-05-29 09:45:15)

	public Node exportString(String tag, String exportMe);

	/**
	 * Returns the builder's node
	 * <p>
	 * Creation date: (1999-09-03 14:08:10)
	 */
	public Node getNode();

	public com.bluebrim.xml.shared.CoXmlVisitorIF getVisitor();

	/**
	 * Resolves which builder to use to create XML from the model
	 * <p>
	 * Creation date: (1999-09-02 13:10:44)
	 */
	public CoXmlBuilderIF resolveBuilder(Object model, boolean connectNodes)
		throws com.bluebrim.xml.shared.CoXmlWriteException;

	/**
	 * Reverts to using the parent node of the current node.
	 * Used in conjunction with {@link addSubNode(String, String[])}.
	 * <p>
	 * Creation date: (1999-10-21 13:38:59)
	 */
	void revertToParentNode();

	public void setVisitor(com.bluebrim.xml.shared.CoXmlVisitorIF visitor);

	/**
	 * Sets the XmlDocument instance which is the base for all nodes generated by builders.
	 * <p>
	 * Creation date: (1999-09-07 15:26:06)
	 */
	public void setXmlDocument(XmlDocument xmlDoc);
}