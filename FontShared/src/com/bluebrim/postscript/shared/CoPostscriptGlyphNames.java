package com.bluebrim.postscript.shared;
import java.util.*;

/**
 * Contains static methods for mapping between postscript glyph names and unicode characters.
 * The mapping is performed as described by the Adobe Glyph List (AGL) 1.2
 * of 22 Oct 1998.
 * See <a href="http://partners.adobe.com/asn/developer/typeforum/unicodegn.html">Adobe's
 * unicode information</a> for details.
 *
 * <p><b>Creation date:</b> 2001-03-28
 * <br><b>Documentation last updated:</b> 2001-10-31
 *
 * @author Magnus Ihse (magnus.ihse@appeal.se)
 */
public final class CoPostscriptGlyphNames {
	private static HashMap charToPostscriptMap;

	private static HashMap postscriptToCharMap;
	private static HashMap postscriptToAlternativeCharMap;

	/* Statically initialize the hash table with postscript names */
	static {
		initializePostscriptMaps();
	}
private final static void initializePostscriptMaps() {
	postscriptToCharMap = new HashMap(1050, 0.95f); // HashMap(int initialCapacity, float loadFactor)
	charToPostscriptMap = new HashMap(1050, 0.95f); // actually there's just 1039 mappings, but slack is good :)
	postscriptToAlternativeCharMap = new HashMap(20, 0.95f); // actually just 12...

	initPostscriptMapping('\u0020', "space");
	initPostscriptMapping('\u0021', "exclam");
	initPostscriptMapping('\u0022', "quotedbl");
	initPostscriptMapping('\u0023', "numbersign");
	initPostscriptMapping('\u0024', "dollar");
	initPostscriptMapping('\u0025', "percent");
	initPostscriptMapping('\u0026', "ampersand");
	initPostscriptMapping('\'', "quotesingle"); // '\u0027' is parsed as ''' which is an error
	initPostscriptMapping('\u0028', "parenleft");
	initPostscriptMapping('\u0029', "parenright");
	initPostscriptMapping('\u002A', "asterisk");
	initPostscriptMapping('\u002B', "plus");
	initPostscriptMapping('\u002C', "comma");
	initPostscriptMapping('\u002D', "hyphen");
	initPostscriptMapping('\u002E', "period");
	initPostscriptMapping('\u002F', "slash");
	initPostscriptMapping('\u0030', "zero");
	initPostscriptMapping('\u0031', "one");
	initPostscriptMapping('\u0032', "two");
	initPostscriptMapping('\u0033', "three");
	initPostscriptMapping('\u0034', "four");
	initPostscriptMapping('\u0035', "five");
	initPostscriptMapping('\u0036', "six");
	initPostscriptMapping('\u0037', "seven");
	initPostscriptMapping('\u0038', "eight");
	initPostscriptMapping('\u0039', "nine");
	initPostscriptMapping('\u003A', "colon");
	initPostscriptMapping('\u003B', "semicolon");
	initPostscriptMapping('\u003C', "less");
	initPostscriptMapping('\u003D', "equal");
	initPostscriptMapping('\u003E', "greater");
	initPostscriptMapping('\u003F', "question");
	initPostscriptMapping('\u0040', "at");
	initPostscriptMapping('\u0041', "A");
	initPostscriptMapping('\u0042', "B");
	initPostscriptMapping('\u0043', "C");
	initPostscriptMapping('\u0044', "D");
	initPostscriptMapping('\u0045', "E");
	initPostscriptMapping('\u0046', "F");
	initPostscriptMapping('\u0047', "G");
	initPostscriptMapping('\u0048', "H");
	initPostscriptMapping('\u0049', "I");
	initPostscriptMapping('\u004A', "J");
	initPostscriptMapping('\u004B', "K");
	initPostscriptMapping('\u004C', "L");
	initPostscriptMapping('\u004D', "M");
	initPostscriptMapping('\u004E', "N");
	initPostscriptMapping('\u004F', "O");
	initPostscriptMapping('\u0050', "P");
	initPostscriptMapping('\u0051', "Q");
	initPostscriptMapping('\u0052', "R");
	initPostscriptMapping('\u0053', "S");
	initPostscriptMapping('\u0054', "T");
	initPostscriptMapping('\u0055', "U");
	initPostscriptMapping('\u0056', "V");
	initPostscriptMapping('\u0057', "W");
	initPostscriptMapping('\u0058', "X");
	initPostscriptMapping('\u0059', "Y");
	initPostscriptMapping('\u005A', "Z");
	initPostscriptMapping('\u005B', "bracketleft");
	initPostscriptMapping('\\', "backslash"); // '\u005C' is parsed as '\' which is an error
	initPostscriptMapping('\u005D', "bracketright");
	initPostscriptMapping('\u005E', "asciicircum");
	initPostscriptMapping('\u005F', "underscore");
	initPostscriptMapping('\u0060', "grave");
	initPostscriptMapping('\u0061', "a");
	initPostscriptMapping('\u0062', "b");
	initPostscriptMapping('\u0063', "c");
	initPostscriptMapping('\u0064', "d");
	initPostscriptMapping('\u0065', "e");
	initPostscriptMapping('\u0066', "f");
	initPostscriptMapping('\u0067', "g");
	initPostscriptMapping('\u0068', "h");
	initPostscriptMapping('\u0069', "i");
	initPostscriptMapping('\u006A', "j");
	initPostscriptMapping('\u006B', "k");
	initPostscriptMapping('\u006C', "l");
	initPostscriptMapping('\u006D', "m");
	initPostscriptMapping('\u006E', "n");
	initPostscriptMapping('\u006F', "o");
	initPostscriptMapping('\u0070', "p");
	initPostscriptMapping('\u0071', "q");
	initPostscriptMapping('\u0072', "r");
	initPostscriptMapping('\u0073', "s");
	initPostscriptMapping('\u0074', "t");
	initPostscriptMapping('\u0075', "u");
	initPostscriptMapping('\u0076', "v");
	initPostscriptMapping('\u0077', "w");
	initPostscriptMapping('\u0078', "x");
	initPostscriptMapping('\u0079', "y");
	initPostscriptMapping('\u007A', "z");
	initPostscriptMapping('\u007B', "braceleft");
	initPostscriptMapping('\u007C', "bar");
	initPostscriptMapping('\u007D', "braceright");
	initPostscriptMapping('\u007E', "asciitilde");
	initPostscriptMapping('\u00A1', "exclamdown");
	initPostscriptMapping('\u00A2', "cent");
	initPostscriptMapping('\u00A3', "sterling");
	initPostscriptMapping('\u00A4', "currency");
	initPostscriptMapping('\u00A5', "yen");
	initPostscriptMapping('\u00A6', "brokenbar");
	initPostscriptMapping('\u00A7', "section");
	initPostscriptMapping('\u00A8', "dieresis");
	initPostscriptMapping('\u00A9', "copyright");
	initPostscriptMapping('\u00AA', "ordfeminine");
	initPostscriptMapping('\u00AB', "guillemotleft");
	initPostscriptMapping('\u00AC', "logicalnot");
	initPostscriptMapping('\u00AE', "registered");
	initPostscriptMapping('\u00AF', "macron");
	initPostscriptMapping('\u00B0', "degree");
	initPostscriptMapping('\u00B1', "plusminus");
	initPostscriptMapping('\u00B2', "twosuperior");
	initPostscriptMapping('\u00B3', "threesuperior");
	initPostscriptMapping('\u00B4', "acute");
	initPostscriptMapping('\u00B5', "mu");
	initPostscriptMapping('\u00B6', "paragraph");
	initPostscriptMapping('\u00B7', "periodcentered");
	initPostscriptMapping('\u00B8', "cedilla");
	initPostscriptMapping('\u00B9', "onesuperior");
	initPostscriptMapping('\u00BA', "ordmasculine");
	initPostscriptMapping('\u00BB', "guillemotright");
	initPostscriptMapping('\u00BC', "onequarter");
	initPostscriptMapping('\u00BD', "onehalf");
	initPostscriptMapping('\u00BE', "threequarters");
	initPostscriptMapping('\u00BF', "questiondown");
	initPostscriptMapping('\u00C0', "Agrave");
	initPostscriptMapping('\u00C1', "Aacute");
	initPostscriptMapping('\u00C2', "Acircumflex");
	initPostscriptMapping('\u00C3', "Atilde");
	initPostscriptMapping('\u00C4', "Adieresis");
	initPostscriptMapping('\u00C5', "Aring");
	initPostscriptMapping('\u00C6', "AE");
	initPostscriptMapping('\u00C7', "Ccedilla");
	initPostscriptMapping('\u00C8', "Egrave");
	initPostscriptMapping('\u00C9', "Eacute");
	initPostscriptMapping('\u00CA', "Ecircumflex");
	initPostscriptMapping('\u00CB', "Edieresis");
	initPostscriptMapping('\u00CC', "Igrave");
	initPostscriptMapping('\u00CD', "Iacute");
	initPostscriptMapping('\u00CE', "Icircumflex");
	initPostscriptMapping('\u00CF', "Idieresis");
	initPostscriptMapping('\u00D0', "Eth");
	initPostscriptMapping('\u00D1', "Ntilde");
	initPostscriptMapping('\u00D2', "Ograve");
	initPostscriptMapping('\u00D3', "Oacute");
	initPostscriptMapping('\u00D4', "Ocircumflex");
	initPostscriptMapping('\u00D5', "Otilde");
	initPostscriptMapping('\u00D6', "Odieresis");
	initPostscriptMapping('\u00D7', "multiply");
	initPostscriptMapping('\u00D8', "Oslash");
	initPostscriptMapping('\u00D9', "Ugrave");
	initPostscriptMapping('\u00DA', "Uacute");
	initPostscriptMapping('\u00DB', "Ucircumflex");
	initPostscriptMapping('\u00DC', "Udieresis");
	initPostscriptMapping('\u00DD', "Yacute");
	initPostscriptMapping('\u00DE', "Thorn");
	initPostscriptMapping('\u00DF', "germandbls");
	initPostscriptMapping('\u00E0', "agrave");
	initPostscriptMapping('\u00E1', "aacute");
	initPostscriptMapping('\u00E2', "acircumflex");
	initPostscriptMapping('\u00E3', "atilde");
	initPostscriptMapping('\u00E4', "adieresis");
	initPostscriptMapping('\u00E5', "aring");
	initPostscriptMapping('\u00E6', "ae");
	initPostscriptMapping('\u00E7', "ccedilla");
	initPostscriptMapping('\u00E8', "egrave");
	initPostscriptMapping('\u00E9', "eacute");
	initPostscriptMapping('\u00EA', "ecircumflex");
	initPostscriptMapping('\u00EB', "edieresis");
	initPostscriptMapping('\u00EC', "igrave");
	initPostscriptMapping('\u00ED', "iacute");
	initPostscriptMapping('\u00EE', "icircumflex");
	initPostscriptMapping('\u00EF', "idieresis");
	initPostscriptMapping('\u00F0', "eth");
	initPostscriptMapping('\u00F1', "ntilde");
	initPostscriptMapping('\u00F2', "ograve");
	initPostscriptMapping('\u00F3', "oacute");
	initPostscriptMapping('\u00F4', "ocircumflex");
	initPostscriptMapping('\u00F5', "otilde");
	initPostscriptMapping('\u00F6', "odieresis");
	initPostscriptMapping('\u00F7', "divide");
	initPostscriptMapping('\u00F8', "oslash");
	initPostscriptMapping('\u00F9', "ugrave");
	initPostscriptMapping('\u00FA', "uacute");
	initPostscriptMapping('\u00FB', "ucircumflex");
	initPostscriptMapping('\u00FC', "udieresis");
	initPostscriptMapping('\u00FD', "yacute");
	initPostscriptMapping('\u00FE', "thorn");
	initPostscriptMapping('\u00FF', "ydieresis");
	initPostscriptMapping('\u0100', "Amacron");
	initPostscriptMapping('\u0101', "amacron");
	initPostscriptMapping('\u0102', "Abreve");
	initPostscriptMapping('\u0103', "abreve");
	initPostscriptMapping('\u0104', "Aogonek");
	initPostscriptMapping('\u0105', "aogonek");
	initPostscriptMapping('\u0106', "Cacute");
	initPostscriptMapping('\u0107', "cacute");
	initPostscriptMapping('\u0108', "Ccircumflex");
	initPostscriptMapping('\u0109', "ccircumflex");
	initPostscriptMapping('\u010A', "Cdotaccent");
	initPostscriptMapping('\u010B', "cdotaccent");
	initPostscriptMapping('\u010C', "Ccaron");
	initPostscriptMapping('\u010D', "ccaron");
	initPostscriptMapping('\u010E', "Dcaron");
	initPostscriptMapping('\u010F', "dcaron");
	initPostscriptMapping('\u0110', "Dcroat");
	initPostscriptMapping('\u0111', "dcroat");
	initPostscriptMapping('\u0112', "Emacron");
	initPostscriptMapping('\u0113', "emacron");
	initPostscriptMapping('\u0114', "Ebreve");
	initPostscriptMapping('\u0115', "ebreve");
	initPostscriptMapping('\u0116', "Edotaccent");
	initPostscriptMapping('\u0117', "edotaccent");
	initPostscriptMapping('\u0118', "Eogonek");
	initPostscriptMapping('\u0119', "eogonek");
	initPostscriptMapping('\u011A', "Ecaron");
	initPostscriptMapping('\u011B', "ecaron");
	initPostscriptMapping('\u011C', "Gcircumflex");
	initPostscriptMapping('\u011D', "gcircumflex");
	initPostscriptMapping('\u011E', "Gbreve");
	initPostscriptMapping('\u011F', "gbreve");
	initPostscriptMapping('\u0120', "Gdotaccent");
	initPostscriptMapping('\u0121', "gdotaccent");
	initPostscriptMapping('\u0122', "Gcommaaccent");
	initPostscriptMapping('\u0123', "gcommaaccent");
	initPostscriptMapping('\u0124', "Hcircumflex");
	initPostscriptMapping('\u0125', "hcircumflex");
	initPostscriptMapping('\u0126', "Hbar");
	initPostscriptMapping('\u0127', "hbar");
	initPostscriptMapping('\u0128', "Itilde");
	initPostscriptMapping('\u0129', "itilde");
	initPostscriptMapping('\u012A', "Imacron");
	initPostscriptMapping('\u012B', "imacron");
	initPostscriptMapping('\u012C', "Ibreve");
	initPostscriptMapping('\u012D', "ibreve");
	initPostscriptMapping('\u012E', "Iogonek");
	initPostscriptMapping('\u012F', "iogonek");
	initPostscriptMapping('\u0130', "Idotaccent");
	initPostscriptMapping('\u0131', "dotlessi");
	initPostscriptMapping('\u0132', "IJ");
	initPostscriptMapping('\u0133', "ij");
	initPostscriptMapping('\u0134', "Jcircumflex");
	initPostscriptMapping('\u0135', "jcircumflex");
	initPostscriptMapping('\u0136', "Kcommaaccent");
	initPostscriptMapping('\u0137', "kcommaaccent");
	initPostscriptMapping('\u0138', "kgreenlandic");
	initPostscriptMapping('\u0139', "Lacute");
	initPostscriptMapping('\u013A', "lacute");
	initPostscriptMapping('\u013B', "Lcommaaccent");
	initPostscriptMapping('\u013C', "lcommaaccent");
	initPostscriptMapping('\u013D', "Lcaron");
	initPostscriptMapping('\u013E', "lcaron");
	initPostscriptMapping('\u013F', "Ldot");
	initPostscriptMapping('\u0140', "ldot");
	initPostscriptMapping('\u0141', "Lslash");
	initPostscriptMapping('\u0142', "lslash");
	initPostscriptMapping('\u0143', "Nacute");
	initPostscriptMapping('\u0144', "nacute");
	initPostscriptMapping('\u0145', "Ncommaaccent");
	initPostscriptMapping('\u0146', "ncommaaccent");
	initPostscriptMapping('\u0147', "Ncaron");
	initPostscriptMapping('\u0148', "ncaron");
	initPostscriptMapping('\u0149', "napostrophe");
	initPostscriptMapping('\u014A', "Eng");
	initPostscriptMapping('\u014B', "eng");
	initPostscriptMapping('\u014C', "Omacron");
	initPostscriptMapping('\u014D', "omacron");
	initPostscriptMapping('\u014E', "Obreve");
	initPostscriptMapping('\u014F', "obreve");
	initPostscriptMapping('\u0150', "Ohungarumlaut");
	initPostscriptMapping('\u0151', "ohungarumlaut");
	initPostscriptMapping('\u0152', "OE");
	initPostscriptMapping('\u0153', "oe");
	initPostscriptMapping('\u0154', "Racute");
	initPostscriptMapping('\u0155', "racute");
	initPostscriptMapping('\u0156', "Rcommaaccent");
	initPostscriptMapping('\u0157', "rcommaaccent");
	initPostscriptMapping('\u0158', "Rcaron");
	initPostscriptMapping('\u0159', "rcaron");
	initPostscriptMapping('\u015A', "Sacute");
	initPostscriptMapping('\u015B', "sacute");
	initPostscriptMapping('\u015C', "Scircumflex");
	initPostscriptMapping('\u015D', "scircumflex");
	initPostscriptMapping('\u015E', "Scedilla");
	initPostscriptMapping('\u015F', "scedilla");
	initPostscriptMapping('\u0160', "Scaron");
	initPostscriptMapping('\u0161', "scaron");
	initPostscriptMapping('\u0162', "Tcommaaccent");
	initPostscriptMapping('\u0163', "tcommaaccent");
	initPostscriptMapping('\u0164', "Tcaron");
	initPostscriptMapping('\u0165', "tcaron");
	initPostscriptMapping('\u0166', "Tbar");
	initPostscriptMapping('\u0167', "tbar");
	initPostscriptMapping('\u0168', "Utilde");
	initPostscriptMapping('\u0169', "utilde");
	initPostscriptMapping('\u016A', "Umacron");
	initPostscriptMapping('\u016B', "umacron");
	initPostscriptMapping('\u016C', "Ubreve");
	initPostscriptMapping('\u016D', "ubreve");
	initPostscriptMapping('\u016E', "Uring");
	initPostscriptMapping('\u016F', "uring");
	initPostscriptMapping('\u0170', "Uhungarumlaut");
	initPostscriptMapping('\u0171', "uhungarumlaut");
	initPostscriptMapping('\u0172', "Uogonek");
	initPostscriptMapping('\u0173', "uogonek");
	initPostscriptMapping('\u0174', "Wcircumflex");
	initPostscriptMapping('\u0175', "wcircumflex");
	initPostscriptMapping('\u0176', "Ycircumflex");
	initPostscriptMapping('\u0177', "ycircumflex");
	initPostscriptMapping('\u0178', "Ydieresis");
	initPostscriptMapping('\u0179', "Zacute");
	initPostscriptMapping('\u017A', "zacute");
	initPostscriptMapping('\u017B', "Zdotaccent");
	initPostscriptMapping('\u017C', "zdotaccent");
	initPostscriptMapping('\u017D', "Zcaron");
	initPostscriptMapping('\u017E', "zcaron");
	initPostscriptMapping('\u017F', "longs");
	initPostscriptMapping('\u0192', "florin");
	initPostscriptMapping('\u01A0', "Ohorn");
	initPostscriptMapping('\u01A1', "ohorn");
	initPostscriptMapping('\u01AF', "Uhorn");
	initPostscriptMapping('\u01B0', "uhorn");
	initPostscriptMapping('\u01E6', "Gcaron");
	initPostscriptMapping('\u01E7', "gcaron");
	initPostscriptMapping('\u01FA', "Aringacute");
	initPostscriptMapping('\u01FB', "aringacute");
	initPostscriptMapping('\u01FC', "AEacute");
	initPostscriptMapping('\u01FD', "aeacute");
	initPostscriptMapping('\u01FE', "Oslashacute");
	initPostscriptMapping('\u01FF', "oslashacute");
	initPostscriptMapping('\u0218', "Scommaaccent");
	initPostscriptMapping('\u0219', "scommaaccent");
	initPostscriptMapping('\u02BC', "afii57929");
	initPostscriptMapping('\u02BD', "afii64937");
	initPostscriptMapping('\u02C6', "circumflex");
	initPostscriptMapping('\u02C7', "caron");
	initPostscriptMapping('\u02D8', "breve");
	initPostscriptMapping('\u02D9', "dotaccent");
	initPostscriptMapping('\u02DA', "ring");
	initPostscriptMapping('\u02DB', "ogonek");
	initPostscriptMapping('\u02DC', "tilde");
	initPostscriptMapping('\u02DD', "hungarumlaut");
	initPostscriptMapping('\u0300', "gravecomb");
	initPostscriptMapping('\u0301', "acutecomb");
	initPostscriptMapping('\u0303', "tildecomb");
	initPostscriptMapping('\u0309', "hookabovecomb");
	initPostscriptMapping('\u0323', "dotbelowcomb");
	initPostscriptMapping('\u0384', "tonos");
	initPostscriptMapping('\u0385', "dieresistonos");
	initPostscriptMapping('\u0386', "Alphatonos");
	initPostscriptMapping('\u0387', "anoteleia");
	initPostscriptMapping('\u0388', "Epsilontonos");
	initPostscriptMapping('\u0389', "Etatonos");
	initPostscriptMapping('\u038A', "Iotatonos");
	initPostscriptMapping('\u038C', "Omicrontonos");
	initPostscriptMapping('\u038E', "Upsilontonos");
	initPostscriptMapping('\u038F', "Omegatonos");
	initPostscriptMapping('\u0390', "iotadieresistonos");
	initPostscriptMapping('\u0391', "Alpha");
	initPostscriptMapping('\u0392', "Beta");
	initPostscriptMapping('\u0393', "Gamma");
	initPostscriptMapping('\u0395', "Epsilon");
	initPostscriptMapping('\u0396', "Zeta");
	initPostscriptMapping('\u0397', "Eta");
	initPostscriptMapping('\u0398', "Theta");
	initPostscriptMapping('\u0399', "Iota");
	initPostscriptMapping('\u039A', "Kappa");
	initPostscriptMapping('\u039B', "Lambda");
	initPostscriptMapping('\u039C', "Mu");
	initPostscriptMapping('\u039D', "Nu");
	initPostscriptMapping('\u039E', "Xi");
	initPostscriptMapping('\u039F', "Omicron");
	initPostscriptMapping('\u03A0', "Pi");
	initPostscriptMapping('\u03A1', "Rho");
	initPostscriptMapping('\u03A3', "Sigma");
	initPostscriptMapping('\u03A4', "Tau");
	initPostscriptMapping('\u03A5', "Upsilon");
	initPostscriptMapping('\u03A6', "Phi");
	initPostscriptMapping('\u03A7', "Chi");
	initPostscriptMapping('\u03A8', "Psi");
	initPostscriptMapping('\u03AA', "Iotadieresis");
	initPostscriptMapping('\u03AB', "Upsilondieresis");
	initPostscriptMapping('\u03AC', "alphatonos");
	initPostscriptMapping('\u03AD', "epsilontonos");
	initPostscriptMapping('\u03AE', "etatonos");
	initPostscriptMapping('\u03AF', "iotatonos");
	initPostscriptMapping('\u03B0', "upsilondieresistonos");
	initPostscriptMapping('\u03B1', "alpha");
	initPostscriptMapping('\u03B2', "beta");
	initPostscriptMapping('\u03B3', "gamma");
	initPostscriptMapping('\u03B4', "delta");
	initPostscriptMapping('\u03B5', "epsilon");
	initPostscriptMapping('\u03B6', "zeta");
	initPostscriptMapping('\u03B7', "eta");
	initPostscriptMapping('\u03B8', "theta");
	initPostscriptMapping('\u03B9', "iota");
	initPostscriptMapping('\u03BA', "kappa");
	initPostscriptMapping('\u03BB', "lambda");
	initPostscriptMapping('\u03BD', "nu");
	initPostscriptMapping('\u03BE', "xi");
	initPostscriptMapping('\u03BF', "omicron");
	initPostscriptMapping('\u03C0', "pi");
	initPostscriptMapping('\u03C1', "rho");
	initPostscriptMapping('\u03C2', "sigma1");
	initPostscriptMapping('\u03C3', "sigma");
	initPostscriptMapping('\u03C4', "tau");
	initPostscriptMapping('\u03C5', "upsilon");
	initPostscriptMapping('\u03C6', "phi");
	initPostscriptMapping('\u03C7', "chi");
	initPostscriptMapping('\u03C8', "psi");
	initPostscriptMapping('\u03C9', "omega");
	initPostscriptMapping('\u03CA', "iotadieresis");
	initPostscriptMapping('\u03CB', "upsilondieresis");
	initPostscriptMapping('\u03CC', "omicrontonos");
	initPostscriptMapping('\u03CD', "upsilontonos");
	initPostscriptMapping('\u03CE', "omegatonos");
	initPostscriptMapping('\u03D1', "theta1");
	initPostscriptMapping('\u03D2', "Upsilon1");
	initPostscriptMapping('\u03D5', "phi1");
	initPostscriptMapping('\u03D6', "omega1");
	initPostscriptMapping('\u0401', "afii10023");
	initPostscriptMapping('\u0402', "afii10051");
	initPostscriptMapping('\u0403', "afii10052");
	initPostscriptMapping('\u0404', "afii10053");
	initPostscriptMapping('\u0405', "afii10054");
	initPostscriptMapping('\u0406', "afii10055");
	initPostscriptMapping('\u0407', "afii10056");
	initPostscriptMapping('\u0408', "afii10057");
	initPostscriptMapping('\u0409', "afii10058");
	initPostscriptMapping('\u040A', "afii10059");
	initPostscriptMapping('\u040B', "afii10060");
	initPostscriptMapping('\u040C', "afii10061");
	initPostscriptMapping('\u040E', "afii10062");
	initPostscriptMapping('\u040F', "afii10145");
	initPostscriptMapping('\u0410', "afii10017");
	initPostscriptMapping('\u0411', "afii10018");
	initPostscriptMapping('\u0412', "afii10019");
	initPostscriptMapping('\u0413', "afii10020");
	initPostscriptMapping('\u0414', "afii10021");
	initPostscriptMapping('\u0415', "afii10022");
	initPostscriptMapping('\u0416', "afii10024");
	initPostscriptMapping('\u0417', "afii10025");
	initPostscriptMapping('\u0418', "afii10026");
	initPostscriptMapping('\u0419', "afii10027");
	initPostscriptMapping('\u041A', "afii10028");
	initPostscriptMapping('\u041B', "afii10029");
	initPostscriptMapping('\u041C', "afii10030");
	initPostscriptMapping('\u041D', "afii10031");
	initPostscriptMapping('\u041E', "afii10032");
	initPostscriptMapping('\u041F', "afii10033");
	initPostscriptMapping('\u0420', "afii10034");
	initPostscriptMapping('\u0421', "afii10035");
	initPostscriptMapping('\u0422', "afii10036");
	initPostscriptMapping('\u0423', "afii10037");
	initPostscriptMapping('\u0424', "afii10038");
	initPostscriptMapping('\u0425', "afii10039");
	initPostscriptMapping('\u0426', "afii10040");
	initPostscriptMapping('\u0427', "afii10041");
	initPostscriptMapping('\u0428', "afii10042");
	initPostscriptMapping('\u0429', "afii10043");
	initPostscriptMapping('\u042A', "afii10044");
	initPostscriptMapping('\u042B', "afii10045");
	initPostscriptMapping('\u042C', "afii10046");
	initPostscriptMapping('\u042D', "afii10047");
	initPostscriptMapping('\u042E', "afii10048");
	initPostscriptMapping('\u042F', "afii10049");
	initPostscriptMapping('\u0430', "afii10065");
	initPostscriptMapping('\u0431', "afii10066");
	initPostscriptMapping('\u0432', "afii10067");
	initPostscriptMapping('\u0433', "afii10068");
	initPostscriptMapping('\u0434', "afii10069");
	initPostscriptMapping('\u0435', "afii10070");
	initPostscriptMapping('\u0436', "afii10072");
	initPostscriptMapping('\u0437', "afii10073");
	initPostscriptMapping('\u0438', "afii10074");
	initPostscriptMapping('\u0439', "afii10075");
	initPostscriptMapping('\u043A', "afii10076");
	initPostscriptMapping('\u043B', "afii10077");
	initPostscriptMapping('\u043C', "afii10078");
	initPostscriptMapping('\u043D', "afii10079");
	initPostscriptMapping('\u043E', "afii10080");
	initPostscriptMapping('\u043F', "afii10081");
	initPostscriptMapping('\u0440', "afii10082");
	initPostscriptMapping('\u0441', "afii10083");
	initPostscriptMapping('\u0442', "afii10084");
	initPostscriptMapping('\u0443', "afii10085");
	initPostscriptMapping('\u0444', "afii10086");
	initPostscriptMapping('\u0445', "afii10087");
	initPostscriptMapping('\u0446', "afii10088");
	initPostscriptMapping('\u0447', "afii10089");
	initPostscriptMapping('\u0448', "afii10090");
	initPostscriptMapping('\u0449', "afii10091");
	initPostscriptMapping('\u044A', "afii10092");
	initPostscriptMapping('\u044B', "afii10093");
	initPostscriptMapping('\u044C', "afii10094");
	initPostscriptMapping('\u044D', "afii10095");
	initPostscriptMapping('\u044E', "afii10096");
	initPostscriptMapping('\u044F', "afii10097");
	initPostscriptMapping('\u0451', "afii10071");
	initPostscriptMapping('\u0452', "afii10099");
	initPostscriptMapping('\u0453', "afii10100");
	initPostscriptMapping('\u0454', "afii10101");
	initPostscriptMapping('\u0455', "afii10102");
	initPostscriptMapping('\u0456', "afii10103");
	initPostscriptMapping('\u0457', "afii10104");
	initPostscriptMapping('\u0458', "afii10105");
	initPostscriptMapping('\u0459', "afii10106");
	initPostscriptMapping('\u045A', "afii10107");
	initPostscriptMapping('\u045B', "afii10108");
	initPostscriptMapping('\u045C', "afii10109");
	initPostscriptMapping('\u045E', "afii10110");
	initPostscriptMapping('\u045F', "afii10193");
	initPostscriptMapping('\u0462', "afii10146");
	initPostscriptMapping('\u0463', "afii10194");
	initPostscriptMapping('\u0472', "afii10147");
	initPostscriptMapping('\u0473', "afii10195");
	initPostscriptMapping('\u0474', "afii10148");
	initPostscriptMapping('\u0475', "afii10196");
	initPostscriptMapping('\u0490', "afii10050");
	initPostscriptMapping('\u0491', "afii10098");
	initPostscriptMapping('\u04D9', "afii10846");
	initPostscriptMapping('\u05B0', "afii57799");
	initPostscriptMapping('\u05B1', "afii57801");
	initPostscriptMapping('\u05B2', "afii57800");
	initPostscriptMapping('\u05B3', "afii57802");
	initPostscriptMapping('\u05B4', "afii57793");
	initPostscriptMapping('\u05B5', "afii57794");
	initPostscriptMapping('\u05B6', "afii57795");
	initPostscriptMapping('\u05B7', "afii57798");
	initPostscriptMapping('\u05B8', "afii57797");
	initPostscriptMapping('\u05B9', "afii57806");
	initPostscriptMapping('\u05BB', "afii57796");
	initPostscriptMapping('\u05BC', "afii57807");
	initPostscriptMapping('\u05BD', "afii57839");
	initPostscriptMapping('\u05BE', "afii57645");
	initPostscriptMapping('\u05BF', "afii57841");
	initPostscriptMapping('\u05C0', "afii57842");
	initPostscriptMapping('\u05C1', "afii57804");
	initPostscriptMapping('\u05C2', "afii57803");
	initPostscriptMapping('\u05C3', "afii57658");
	initPostscriptMapping('\u05D0', "afii57664");
	initPostscriptMapping('\u05D1', "afii57665");
	initPostscriptMapping('\u05D2', "afii57666");
	initPostscriptMapping('\u05D3', "afii57667");
	initPostscriptMapping('\u05D4', "afii57668");
	initPostscriptMapping('\u05D5', "afii57669");
	initPostscriptMapping('\u05D6', "afii57670");
	initPostscriptMapping('\u05D7', "afii57671");
	initPostscriptMapping('\u05D8', "afii57672");
	initPostscriptMapping('\u05D9', "afii57673");
	initPostscriptMapping('\u05DA', "afii57674");
	initPostscriptMapping('\u05DB', "afii57675");
	initPostscriptMapping('\u05DC', "afii57676");
	initPostscriptMapping('\u05DD', "afii57677");
	initPostscriptMapping('\u05DE', "afii57678");
	initPostscriptMapping('\u05DF', "afii57679");
	initPostscriptMapping('\u05E0', "afii57680");
	initPostscriptMapping('\u05E1', "afii57681");
	initPostscriptMapping('\u05E2', "afii57682");
	initPostscriptMapping('\u05E3', "afii57683");
	initPostscriptMapping('\u05E4', "afii57684");
	initPostscriptMapping('\u05E5', "afii57685");
	initPostscriptMapping('\u05E6', "afii57686");
	initPostscriptMapping('\u05E7', "afii57687");
	initPostscriptMapping('\u05E8', "afii57688");
	initPostscriptMapping('\u05E9', "afii57689");
	initPostscriptMapping('\u05EA', "afii57690");
	initPostscriptMapping('\u05F0', "afii57716");
	initPostscriptMapping('\u05F1', "afii57717");
	initPostscriptMapping('\u05F2', "afii57718");
	initPostscriptMapping('\u060C', "afii57388");
	initPostscriptMapping('\u061B', "afii57403");
	initPostscriptMapping('\u061F', "afii57407");
	initPostscriptMapping('\u0621', "afii57409");
	initPostscriptMapping('\u0622', "afii57410");
	initPostscriptMapping('\u0623', "afii57411");
	initPostscriptMapping('\u0624', "afii57412");
	initPostscriptMapping('\u0625', "afii57413");
	initPostscriptMapping('\u0626', "afii57414");
	initPostscriptMapping('\u0627', "afii57415");
	initPostscriptMapping('\u0628', "afii57416");
	initPostscriptMapping('\u0629', "afii57417");
	initPostscriptMapping('\u062A', "afii57418");
	initPostscriptMapping('\u062B', "afii57419");
	initPostscriptMapping('\u062C', "afii57420");
	initPostscriptMapping('\u062D', "afii57421");
	initPostscriptMapping('\u062E', "afii57422");
	initPostscriptMapping('\u062F', "afii57423");
	initPostscriptMapping('\u0630', "afii57424");
	initPostscriptMapping('\u0631', "afii57425");
	initPostscriptMapping('\u0632', "afii57426");
	initPostscriptMapping('\u0633', "afii57427");
	initPostscriptMapping('\u0634', "afii57428");
	initPostscriptMapping('\u0635', "afii57429");
	initPostscriptMapping('\u0636', "afii57430");
	initPostscriptMapping('\u0637', "afii57431");
	initPostscriptMapping('\u0638', "afii57432");
	initPostscriptMapping('\u0639', "afii57433");
	initPostscriptMapping('\u063A', "afii57434");
	initPostscriptMapping('\u0640', "afii57440");
	initPostscriptMapping('\u0641', "afii57441");
	initPostscriptMapping('\u0642', "afii57442");
	initPostscriptMapping('\u0643', "afii57443");
	initPostscriptMapping('\u0644', "afii57444");
	initPostscriptMapping('\u0645', "afii57445");
	initPostscriptMapping('\u0646', "afii57446");
	initPostscriptMapping('\u0647', "afii57470");
	initPostscriptMapping('\u0648', "afii57448");
	initPostscriptMapping('\u0649', "afii57449");
	initPostscriptMapping('\u064A', "afii57450");
	initPostscriptMapping('\u064B', "afii57451");
	initPostscriptMapping('\u064C', "afii57452");
	initPostscriptMapping('\u064D', "afii57453");
	initPostscriptMapping('\u064E', "afii57454");
	initPostscriptMapping('\u064F', "afii57455");
	initPostscriptMapping('\u0650', "afii57456");
	initPostscriptMapping('\u0651', "afii57457");
	initPostscriptMapping('\u0652', "afii57458");
	initPostscriptMapping('\u0660', "afii57392");
	initPostscriptMapping('\u0661', "afii57393");
	initPostscriptMapping('\u0662', "afii57394");
	initPostscriptMapping('\u0663', "afii57395");
	initPostscriptMapping('\u0664', "afii57396");
	initPostscriptMapping('\u0665', "afii57397");
	initPostscriptMapping('\u0666', "afii57398");
	initPostscriptMapping('\u0667', "afii57399");
	initPostscriptMapping('\u0668', "afii57400");
	initPostscriptMapping('\u0669', "afii57401");
	initPostscriptMapping('\u066A', "afii57381");
	initPostscriptMapping('\u066D', "afii63167");
	initPostscriptMapping('\u0679', "afii57511");
	initPostscriptMapping('\u067E', "afii57506");
	initPostscriptMapping('\u0686', "afii57507");
	initPostscriptMapping('\u0688', "afii57512");
	initPostscriptMapping('\u0691', "afii57513");
	initPostscriptMapping('\u0698', "afii57508");
	initPostscriptMapping('\u06A4', "afii57505");
	initPostscriptMapping('\u06AF', "afii57509");
	initPostscriptMapping('\u06BA', "afii57514");
	initPostscriptMapping('\u06D2', "afii57519");
	initPostscriptMapping('\u06D5', "afii57534");
	initPostscriptMapping('\u1E80', "Wgrave");
	initPostscriptMapping('\u1E81', "wgrave");
	initPostscriptMapping('\u1E82', "Wacute");
	initPostscriptMapping('\u1E83', "wacute");
	initPostscriptMapping('\u1E84', "Wdieresis");
	initPostscriptMapping('\u1E85', "wdieresis");
	initPostscriptMapping('\u1EF2', "Ygrave");
	initPostscriptMapping('\u1EF3', "ygrave");
	initPostscriptMapping('\u200C', "afii61664");
	initPostscriptMapping('\u200D', "afii301");
	initPostscriptMapping('\u200E', "afii299");
	initPostscriptMapping('\u200F', "afii300");
	initPostscriptMapping('\u2012', "figuredash");
	initPostscriptMapping('\u2013', "endash");
	initPostscriptMapping('\u2014', "emdash");
	initPostscriptMapping('\u2015', "afii00208");
	initPostscriptMapping('\u2017', "underscoredbl");
	initPostscriptMapping('\u2018', "quoteleft");
	initPostscriptMapping('\u2019', "quoteright");
	initPostscriptMapping('\u201A', "quotesinglbase");
	initPostscriptMapping('\u201B', "quotereversed");
	initPostscriptMapping('\u201C', "quotedblleft");
	initPostscriptMapping('\u201D', "quotedblright");
	initPostscriptMapping('\u201E', "quotedblbase");
	initPostscriptMapping('\u2020', "dagger");
	initPostscriptMapping('\u2021', "daggerdbl");
	initPostscriptMapping('\u2022', "bullet");
	initPostscriptMapping('\u2024', "onedotenleader");
	initPostscriptMapping('\u2025', "twodotenleader");
	initPostscriptMapping('\u2026', "ellipsis");
	initPostscriptMapping('\u202C', "afii61573");
	initPostscriptMapping('\u202D', "afii61574");
	initPostscriptMapping('\u202E', "afii61575");
	initPostscriptMapping('\u2030', "perthousand");
	initPostscriptMapping('\u2032', "minute");
	initPostscriptMapping('\u2033', "second");
	initPostscriptMapping('\u2039', "guilsinglleft");
	initPostscriptMapping('\u203A', "guilsinglright");
	initPostscriptMapping('\u203C', "exclamdbl");
	initPostscriptMapping('\u2044', "fraction");
	initPostscriptMapping('\u2070', "zerosuperior");
	initPostscriptMapping('\u2074', "foursuperior");
	initPostscriptMapping('\u2075', "fivesuperior");
	initPostscriptMapping('\u2076', "sixsuperior");
	initPostscriptMapping('\u2077', "sevensuperior");
	initPostscriptMapping('\u2078', "eightsuperior");
	initPostscriptMapping('\u2079', "ninesuperior");
	initPostscriptMapping('\u207D', "parenleftsuperior");
	initPostscriptMapping('\u207E', "parenrightsuperior");
	initPostscriptMapping('\u207F', "nsuperior");
	initPostscriptMapping('\u2080', "zeroinferior");
	initPostscriptMapping('\u2081', "oneinferior");
	initPostscriptMapping('\u2082', "twoinferior");
	initPostscriptMapping('\u2083', "threeinferior");
	initPostscriptMapping('\u2084', "fourinferior");
	initPostscriptMapping('\u2085', "fiveinferior");
	initPostscriptMapping('\u2086', "sixinferior");
	initPostscriptMapping('\u2087', "seveninferior");
	initPostscriptMapping('\u2088', "eightinferior");
	initPostscriptMapping('\u2089', "nineinferior");
	initPostscriptMapping('\u208D', "parenleftinferior");
	initPostscriptMapping('\u208E', "parenrightinferior");
	initPostscriptMapping('\u20A1', "colonmonetary");
	initPostscriptMapping('\u20A3', "franc");
	initPostscriptMapping('\u20A4', "lira");
	initPostscriptMapping('\u20A7', "peseta");
	initPostscriptMapping('\u20AA', "afii57636");
	initPostscriptMapping('\u20AB', "dong");
	initPostscriptMapping('\u20AC', "Euro");
	initPostscriptMapping('\u2105', "afii61248");
	initPostscriptMapping('\u2111', "Ifraktur");
	initPostscriptMapping('\u2113', "afii61289");
	initPostscriptMapping('\u2116', "afii61352");
	initPostscriptMapping('\u2118', "weierstrass");
	initPostscriptMapping('\u211C', "Rfraktur");
	initPostscriptMapping('\u211E', "prescription");
	initPostscriptMapping('\u2122', "trademark");
	initPostscriptMapping('\u2126', "Omega");
	initPostscriptMapping('\u212E', "estimated");
	initPostscriptMapping('\u2135', "aleph");
	initPostscriptMapping('\u2153', "onethird");
	initPostscriptMapping('\u2154', "twothirds");
	initPostscriptMapping('\u215B', "oneeighth");
	initPostscriptMapping('\u215C', "threeeighths");
	initPostscriptMapping('\u215D', "fiveeighths");
	initPostscriptMapping('\u215E', "seveneighths");
	initPostscriptMapping('\u2190', "arrowleft");
	initPostscriptMapping('\u2191', "arrowup");
	initPostscriptMapping('\u2192', "arrowright");
	initPostscriptMapping('\u2193', "arrowdown");
	initPostscriptMapping('\u2194', "arrowboth");
	initPostscriptMapping('\u2195', "arrowupdn");
	initPostscriptMapping('\u21A8', "arrowupdnbse");
	initPostscriptMapping('\u21B5', "carriagereturn");
	initPostscriptMapping('\u21D0', "arrowdblleft");
	initPostscriptMapping('\u21D1', "arrowdblup");
	initPostscriptMapping('\u21D2', "arrowdblright");
	initPostscriptMapping('\u21D3', "arrowdbldown");
	initPostscriptMapping('\u21D4', "arrowdblboth");
	initPostscriptMapping('\u2200', "universal");
	initPostscriptMapping('\u2202', "partialdiff");
	initPostscriptMapping('\u2203', "existential");
	initPostscriptMapping('\u2205', "emptyset");
	initPostscriptMapping('\u2206', "Delta");
	initPostscriptMapping('\u2207', "gradient");
	initPostscriptMapping('\u2208', "element");
	initPostscriptMapping('\u2209', "notelement");
	initPostscriptMapping('\u220B', "suchthat");
	initPostscriptMapping('\u220F', "product");
	initPostscriptMapping('\u2211', "summation");
	initPostscriptMapping('\u2212', "minus");
	initPostscriptMapping('\u2217', "asteriskmath");
	initPostscriptMapping('\u221A', "radical");
	initPostscriptMapping('\u221D', "proportional");
	initPostscriptMapping('\u221E', "infinity");
	initPostscriptMapping('\u221F', "orthogonal");
	initPostscriptMapping('\u2220', "angle");
	initPostscriptMapping('\u2227', "logicaland");
	initPostscriptMapping('\u2228', "logicalor");
	initPostscriptMapping('\u2229', "intersection");
	initPostscriptMapping('\u222A', "union");
	initPostscriptMapping('\u222B', "integral");
	initPostscriptMapping('\u2234', "therefore");
	initPostscriptMapping('\u223C', "similar");
	initPostscriptMapping('\u2245', "congruent");
	initPostscriptMapping('\u2248', "approxequal");
	initPostscriptMapping('\u2260', "notequal");
	initPostscriptMapping('\u2261', "equivalence");
	initPostscriptMapping('\u2264', "lessequal");
	initPostscriptMapping('\u2265', "greaterequal");
	initPostscriptMapping('\u2282', "propersubset");
	initPostscriptMapping('\u2283', "propersuperset");
	initPostscriptMapping('\u2284', "notsubset");
	initPostscriptMapping('\u2286', "reflexsubset");
	initPostscriptMapping('\u2287', "reflexsuperset");
	initPostscriptMapping('\u2295', "circleplus");
	initPostscriptMapping('\u2297', "circlemultiply");
	initPostscriptMapping('\u22A5', "perpendicular");
	initPostscriptMapping('\u22C5', "dotmath");
	initPostscriptMapping('\u2302', "house");
	initPostscriptMapping('\u2310', "revlogicalnot");
	initPostscriptMapping('\u2320', "integraltp");
	initPostscriptMapping('\u2321', "integralbt");
	initPostscriptMapping('\u2329', "angleleft");
	initPostscriptMapping('\u232A', "angleright");
	initPostscriptMapping('\u2500', "SF100000");
	initPostscriptMapping('\u2502', "SF110000");
	initPostscriptMapping('\u250C', "SF010000");
	initPostscriptMapping('\u2510', "SF030000");
	initPostscriptMapping('\u2514', "SF020000");
	initPostscriptMapping('\u2518', "SF040000");
	initPostscriptMapping('\u251C', "SF080000");
	initPostscriptMapping('\u2524', "SF090000");
	initPostscriptMapping('\u252C', "SF060000");
	initPostscriptMapping('\u2534', "SF070000");
	initPostscriptMapping('\u253C', "SF050000");
	initPostscriptMapping('\u2550', "SF430000");
	initPostscriptMapping('\u2551', "SF240000");
	initPostscriptMapping('\u2552', "SF510000");
	initPostscriptMapping('\u2553', "SF520000");
	initPostscriptMapping('\u2554', "SF390000");
	initPostscriptMapping('\u2555', "SF220000");
	initPostscriptMapping('\u2556', "SF210000");
	initPostscriptMapping('\u2557', "SF250000");
	initPostscriptMapping('\u2558', "SF500000");
	initPostscriptMapping('\u2559', "SF490000");
	initPostscriptMapping('\u255A', "SF380000");
	initPostscriptMapping('\u255B', "SF280000");
	initPostscriptMapping('\u255C', "SF270000");
	initPostscriptMapping('\u255D', "SF260000");
	initPostscriptMapping('\u255E', "SF360000");
	initPostscriptMapping('\u255F', "SF370000");
	initPostscriptMapping('\u2560', "SF420000");
	initPostscriptMapping('\u2561', "SF190000");
	initPostscriptMapping('\u2562', "SF200000");
	initPostscriptMapping('\u2563', "SF230000");
	initPostscriptMapping('\u2564', "SF470000");
	initPostscriptMapping('\u2565', "SF480000");
	initPostscriptMapping('\u2566', "SF410000");
	initPostscriptMapping('\u2567', "SF450000");
	initPostscriptMapping('\u2568', "SF460000");
	initPostscriptMapping('\u2569', "SF400000");
	initPostscriptMapping('\u256A', "SF540000");
	initPostscriptMapping('\u256B', "SF530000");
	initPostscriptMapping('\u256C', "SF440000");
	initPostscriptMapping('\u2580', "upblock");
	initPostscriptMapping('\u2584', "dnblock");
	initPostscriptMapping('\u2588', "block");
	initPostscriptMapping('\u258C', "lfblock");
	initPostscriptMapping('\u2590', "rtblock");
	initPostscriptMapping('\u2591', "ltshade");
	initPostscriptMapping('\u2592', "shade");
	initPostscriptMapping('\u2593', "dkshade");
	initPostscriptMapping('\u25A0', "filledbox");
	initPostscriptMapping('\u25A1', "H22073");
	initPostscriptMapping('\u25AA', "H18543");
	initPostscriptMapping('\u25AB', "H18551");
	initPostscriptMapping('\u25AC', "filledrect");
	initPostscriptMapping('\u25B2', "triagup");
	initPostscriptMapping('\u25BA', "triagrt");
	initPostscriptMapping('\u25BC', "triagdn");
	initPostscriptMapping('\u25C4', "triaglf");
	initPostscriptMapping('\u25CA', "lozenge");
	initPostscriptMapping('\u25CB', "circle");
	initPostscriptMapping('\u25CF', "H18533");
	initPostscriptMapping('\u25D8', "invbullet");
	initPostscriptMapping('\u25D9', "invcircle");
	initPostscriptMapping('\u25E6', "openbullet");
	initPostscriptMapping('\u263A', "smileface");
	initPostscriptMapping('\u263B', "invsmileface");
	initPostscriptMapping('\u263C', "sun");
	initPostscriptMapping('\u2640', "female");
	initPostscriptMapping('\u2642', "male");
	initPostscriptMapping('\u2660', "spade");
	initPostscriptMapping('\u2663', "club");
	initPostscriptMapping('\u2665', "heart");
	initPostscriptMapping('\u2666', "diamond");
	initPostscriptMapping('\u266A', "musicalnote");
	initPostscriptMapping('\u266B', "musicalnotedbl");
	initPostscriptMapping('\uF6BE', "dotlessj");
	initPostscriptMapping('\uF6BF', "LL");
	initPostscriptMapping('\uF6C0', "ll");
	initPostscriptMapping('\uF6C3', "commaaccent");
	initPostscriptMapping('\uF6C4', "afii10063");
	initPostscriptMapping('\uF6C5', "afii10064");
	initPostscriptMapping('\uF6C6', "afii10192");
	initPostscriptMapping('\uF6C7', "afii10831");
	initPostscriptMapping('\uF6C8', "afii10832");
	initPostscriptMapping('\uF6C9', "Acute");
	initPostscriptMapping('\uF6CA', "Caron");
	initPostscriptMapping('\uF6CB', "Dieresis");
	initPostscriptMapping('\uF6CC', "DieresisAcute");
	initPostscriptMapping('\uF6CD', "DieresisGrave");
	initPostscriptMapping('\uF6CE', "Grave");
	initPostscriptMapping('\uF6CF', "Hungarumlaut");
	initPostscriptMapping('\uF6D0', "Macron");
	initPostscriptMapping('\uF6D1', "cyrBreve");
	initPostscriptMapping('\uF6D2', "cyrFlex");
	initPostscriptMapping('\uF6D3', "dblGrave");
	initPostscriptMapping('\uF6D4', "cyrbreve");
	initPostscriptMapping('\uF6D5', "cyrflex");
	initPostscriptMapping('\uF6D6', "dblgrave");
	initPostscriptMapping('\uF6D7', "dieresisacute");
	initPostscriptMapping('\uF6D8', "dieresisgrave");
	initPostscriptMapping('\uF6D9', "copyrightserif");
	initPostscriptMapping('\uF6DA', "registerserif");
	initPostscriptMapping('\uF6DB', "trademarkserif");
	initPostscriptMapping('\uF6DC', "onefitted");
	initPostscriptMapping('\uF6DD', "rupiah");
	initPostscriptMapping('\uF6DE', "threequartersemdash");
	initPostscriptMapping('\uF6DF', "centinferior");
	initPostscriptMapping('\uF6E0', "centsuperior");
	initPostscriptMapping('\uF6E1', "commainferior");
	initPostscriptMapping('\uF6E2', "commasuperior");
	initPostscriptMapping('\uF6E3', "dollarinferior");
	initPostscriptMapping('\uF6E4', "dollarsuperior");
	initPostscriptMapping('\uF6E5', "hypheninferior");
	initPostscriptMapping('\uF6E6', "hyphensuperior");
	initPostscriptMapping('\uF6E7', "periodinferior");
	initPostscriptMapping('\uF6E8', "periodsuperior");
	initPostscriptMapping('\uF6E9', "asuperior");
	initPostscriptMapping('\uF6EA', "bsuperior");
	initPostscriptMapping('\uF6EB', "dsuperior");
	initPostscriptMapping('\uF6EC', "esuperior");
	initPostscriptMapping('\uF6ED', "isuperior");
	initPostscriptMapping('\uF6EE', "lsuperior");
	initPostscriptMapping('\uF6EF', "msuperior");
	initPostscriptMapping('\uF6F0', "osuperior");
	initPostscriptMapping('\uF6F1', "rsuperior");
	initPostscriptMapping('\uF6F2', "ssuperior");
	initPostscriptMapping('\uF6F3', "tsuperior");
	initPostscriptMapping('\uF6F4', "Brevesmall");
	initPostscriptMapping('\uF6F5', "Caronsmall");
	initPostscriptMapping('\uF6F6', "Circumflexsmall");
	initPostscriptMapping('\uF6F7', "Dotaccentsmall");
	initPostscriptMapping('\uF6F8', "Hungarumlautsmall");
	initPostscriptMapping('\uF6F9', "Lslashsmall");
	initPostscriptMapping('\uF6FA', "OEsmall");
	initPostscriptMapping('\uF6FB', "Ogoneksmall");
	initPostscriptMapping('\uF6FC', "Ringsmall");
	initPostscriptMapping('\uF6FD', "Scaronsmall");
	initPostscriptMapping('\uF6FE', "Tildesmall");
	initPostscriptMapping('\uF6FF', "Zcaronsmall");
	initPostscriptMapping('\uF721', "exclamsmall");
	initPostscriptMapping('\uF724', "dollaroldstyle");
	initPostscriptMapping('\uF726', "ampersandsmall");
	initPostscriptMapping('\uF730', "zerooldstyle");
	initPostscriptMapping('\uF731', "oneoldstyle");
	initPostscriptMapping('\uF732', "twooldstyle");
	initPostscriptMapping('\uF733', "threeoldstyle");
	initPostscriptMapping('\uF734', "fouroldstyle");
	initPostscriptMapping('\uF735', "fiveoldstyle");
	initPostscriptMapping('\uF736', "sixoldstyle");
	initPostscriptMapping('\uF737', "sevenoldstyle");
	initPostscriptMapping('\uF738', "eightoldstyle");
	initPostscriptMapping('\uF739', "nineoldstyle");
	initPostscriptMapping('\uF73F', "questionsmall");
	initPostscriptMapping('\uF760', "Gravesmall");
	initPostscriptMapping('\uF761', "Asmall");
	initPostscriptMapping('\uF762', "Bsmall");
	initPostscriptMapping('\uF763', "Csmall");
	initPostscriptMapping('\uF764', "Dsmall");
	initPostscriptMapping('\uF765', "Esmall");
	initPostscriptMapping('\uF766', "Fsmall");
	initPostscriptMapping('\uF767', "Gsmall");
	initPostscriptMapping('\uF768', "Hsmall");
	initPostscriptMapping('\uF769', "Ismall");
	initPostscriptMapping('\uF76A', "Jsmall");
	initPostscriptMapping('\uF76B', "Ksmall");
	initPostscriptMapping('\uF76C', "Lsmall");
	initPostscriptMapping('\uF76D', "Msmall");
	initPostscriptMapping('\uF76E', "Nsmall");
	initPostscriptMapping('\uF76F', "Osmall");
	initPostscriptMapping('\uF770', "Psmall");
	initPostscriptMapping('\uF771', "Qsmall");
	initPostscriptMapping('\uF772', "Rsmall");
	initPostscriptMapping('\uF773', "Ssmall");
	initPostscriptMapping('\uF774', "Tsmall");
	initPostscriptMapping('\uF775', "Usmall");
	initPostscriptMapping('\uF776', "Vsmall");
	initPostscriptMapping('\uF777', "Wsmall");
	initPostscriptMapping('\uF778', "Xsmall");
	initPostscriptMapping('\uF779', "Ysmall");
	initPostscriptMapping('\uF77A', "Zsmall");
	initPostscriptMapping('\uF7A1', "exclamdownsmall");
	initPostscriptMapping('\uF7A2', "centoldstyle");
	initPostscriptMapping('\uF7A8', "Dieresissmall");
	initPostscriptMapping('\uF7AF', "Macronsmall");
	initPostscriptMapping('\uF7B4', "Acutesmall");
	initPostscriptMapping('\uF7B8', "Cedillasmall");
	initPostscriptMapping('\uF7BF', "questiondownsmall");
	initPostscriptMapping('\uF7E0', "Agravesmall");
	initPostscriptMapping('\uF7E1', "Aacutesmall");
	initPostscriptMapping('\uF7E2', "Acircumflexsmall");
	initPostscriptMapping('\uF7E3', "Atildesmall");
	initPostscriptMapping('\uF7E4', "Adieresissmall");
	initPostscriptMapping('\uF7E5', "Aringsmall");
	initPostscriptMapping('\uF7E6', "AEsmall");
	initPostscriptMapping('\uF7E7', "Ccedillasmall");
	initPostscriptMapping('\uF7E8', "Egravesmall");
	initPostscriptMapping('\uF7E9', "Eacutesmall");
	initPostscriptMapping('\uF7EA', "Ecircumflexsmall");
	initPostscriptMapping('\uF7EB', "Edieresissmall");
	initPostscriptMapping('\uF7EC', "Igravesmall");
	initPostscriptMapping('\uF7ED', "Iacutesmall");
	initPostscriptMapping('\uF7EE', "Icircumflexsmall");
	initPostscriptMapping('\uF7EF', "Idieresissmall");
	initPostscriptMapping('\uF7F0', "Ethsmall");
	initPostscriptMapping('\uF7F1', "Ntildesmall");
	initPostscriptMapping('\uF7F2', "Ogravesmall");
	initPostscriptMapping('\uF7F3', "Oacutesmall");
	initPostscriptMapping('\uF7F4', "Ocircumflexsmall");
	initPostscriptMapping('\uF7F5', "Otildesmall");
	initPostscriptMapping('\uF7F6', "Odieresissmall");
	initPostscriptMapping('\uF7F8', "Oslashsmall");
	initPostscriptMapping('\uF7F9', "Ugravesmall");
	initPostscriptMapping('\uF7FA', "Uacutesmall");
	initPostscriptMapping('\uF7FB', "Ucircumflexsmall");
	initPostscriptMapping('\uF7FC', "Udieresissmall");
	initPostscriptMapping('\uF7FD', "Yacutesmall");
	initPostscriptMapping('\uF7FE', "Thornsmall");
	initPostscriptMapping('\uF7FF', "Ydieresissmall");
	initPostscriptMapping('\uF8E5', "radicalex");
	initPostscriptMapping('\uF8E6', "arrowvertex");
	initPostscriptMapping('\uF8E7', "arrowhorizex");
	initPostscriptMapping('\uF8E8', "registersans");
	initPostscriptMapping('\uF8E9', "copyrightsans");
	initPostscriptMapping('\uF8EA', "trademarksans");
	initPostscriptMapping('\uF8EB', "parenlefttp");
	initPostscriptMapping('\uF8EC', "parenleftex");
	initPostscriptMapping('\uF8ED', "parenleftbt");
	initPostscriptMapping('\uF8EE', "bracketlefttp");
	initPostscriptMapping('\uF8EF', "bracketleftex");
	initPostscriptMapping('\uF8F0', "bracketleftbt");
	initPostscriptMapping('\uF8F1', "bracelefttp");
	initPostscriptMapping('\uF8F2', "braceleftmid");
	initPostscriptMapping('\uF8F3', "braceleftbt");
	initPostscriptMapping('\uF8F4', "braceex");
	initPostscriptMapping('\uF8F5', "integralex");
	initPostscriptMapping('\uF8F6', "parenrighttp");
	initPostscriptMapping('\uF8F7', "parenrightex");
	initPostscriptMapping('\uF8F8', "parenrightbt");
	initPostscriptMapping('\uF8F9', "bracketrighttp");
	initPostscriptMapping('\uF8FA', "bracketrightex");
	initPostscriptMapping('\uF8FB', "bracketrightbt");
	initPostscriptMapping('\uF8FC', "bracerighttp");
	initPostscriptMapping('\uF8FD', "bracerightmid");
	initPostscriptMapping('\uF8FE', "bracerightbt");
	initPostscriptMapping('\uFB00', "ff");
	initPostscriptMapping('\uFB01', "fi");
	initPostscriptMapping('\uFB02', "fl");
	initPostscriptMapping('\uFB03', "ffi");
	initPostscriptMapping('\uFB04', "ffl");
	initPostscriptMapping('\uFB1F', "afii57705");
	initPostscriptMapping('\uFB2A', "afii57694");
	initPostscriptMapping('\uFB2B', "afii57695");
	initPostscriptMapping('\uFB35', "afii57723");
	initPostscriptMapping('\uFB4B', "afii57700");

	// Duplicate postscript glyph names...
	initDuplicateMapping('\u00A0', "space");
	initDuplicateMapping('\u00AD', "hyphen");
	initDuplicateMapping('\u021A', "Tcommaaccent");
	initDuplicateMapping('\u021B', "tcommaaccent");
	initDuplicateMapping('\u02C9', "macron");
	initDuplicateMapping('\u0394', "Delta");
	initDuplicateMapping('\u03A9', "Omega");
	initDuplicateMapping('\u03BC', "mu");
	initDuplicateMapping('\u2215', "fraction");
	initDuplicateMapping('\u2219', "periodcentered");
	initDuplicateMapping('\uF6C1', "Scedilla");
	initDuplicateMapping('\uF6C2', "scedilla");
}

private final static void initPostscriptMapping(char ch, String glyphName) {
	postscriptToCharMap.put(glyphName, new Character(ch));
	charToPostscriptMap.put(new Character(ch), glyphName);
}    



/**
 * Get the postscript glyph name for the specified unicode
 * character.
 *
 * @return <code>null</code> if no postscript glyph name is found for that unicode character.
 * @author Magnus Ihse <magnus.ihse@appeal.se> (2001-03-28 15:39:49)
 */
 
public final static String charToGlyphName(char c) {
	return (String)charToPostscriptMap.get(new Character(c));
}



/**
 * Check if alternative unicode char corresponding to the specified postscript glyph name is available.
 *
 * @see glyphNameToAlternativeChar(String)
 * @return <code>'+u0000'</code> if no alternative unicode char is found for that postscript glyph name.
 * @author Magnus Ihse <magnus.ihse@appeal.se> (2001-03-28 15:39:49)
 */
 
public final static boolean glyphNameHasAlternative(String glyphName) {
	Character character = (Character)postscriptToAlternativeCharMap.get(glyphName);
	return (character != null);  	// true if mapping exists...
}


/**
 * Get the alternative unicode char that correspondes to the specified postscript glyph name.
 * Some (12 at the moment) of the postscript glyph names maps to two different unicode values.
 * Of these, one is identified as a primary mapping, and is returned as normal. The other, if
 * available, is returned by this method.
 *
 * @return <code>'+u0000'</code> if no alternative unicode char is found for that postscript glyph name.
 * @author Magnus Ihse <magnus.ihse@appeal.se> (2001-03-28 15:39:49)
 */
 
public final static char glyphNameToAlternativeChar(String glyphName) {
	Character character = (Character)postscriptToAlternativeCharMap.get(glyphName);
	if (character != null) {
		return character.charValue();
	} else {
		return '\u0000';
		// PENDING: perhaps not the best possible solution...
	}
}


/**
 * Get the unicode char that correspondes to the specified postscript glyph name.
 *
 * @return <code>'+u0000'</code> if no unicode char is found for that postscript glyph name.
 * @author Magnus Ihse <magnus.ihse@appeal.se> (2001-03-28 15:39:49)
 */
 
public final static char glyphNameToChar(String glyphName) {
	Character character = (Character)postscriptToCharMap.get(glyphName);
	if (character != null) {
		return character.charValue();
	} else {
		return '\u0000';
		// PENDING: perhaps not the best possible solution...
	}
}


private final static void initDuplicateMapping(char ch, String glyphName) {
	postscriptToAlternativeCharMap.put(glyphName, new Character(ch));
	charToPostscriptMap.put(new Character(ch), glyphName);
}
}