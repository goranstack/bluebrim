package com.bluebrim.layoutmanager.test;

import java.awt.*;
import java.awt.event.*;

import com.bluebrim.layoutmanager.*;

/**
 * Listens to the events generated when the user selects a check box
 */

class CheckboxListener implements ItemListener {

	CheckboxGroup cbg; // the check box group
	ViewManager viewManager; // the view manager for this listener

	/**
	 * Creates a check box listener for the specified check box group
	 * @param viewManager   the view manager that draws the collection
	 *                      rectangles on the screen
	 * @param cbg  the check box group that is to be listened to
	 */

	CheckboxListener(ViewManager viewManager, CheckboxGroup cbg) {
		this.cbg = cbg;
		this.viewManager = viewManager;
	}
	/**
	 * This method handles the events generated by selection/deselection
	 * of any particular item in the check boxes. This method gets the
	 * appropriate orientation that has been selected and asks the
	 * view manager to draw the rectangles with the new orientation
	 * @param e  the item changed event
	 */

	public void itemStateChanged(ItemEvent e) {
		// get the check box that has been currently selected
		Checkbox c = cbg.getSelectedCheckbox();
		String lbl = c.getLabel(); // get the label of the checkbox

		// check which of the check boxes has been selected and call
		// the draw method with the orientation for that box
		if(lbl.equals("Bottom Left")) {
			viewManager.draw(CornerConstants.BOTTOM_LEFT);
		} else if(lbl.equals("Bottom Right")) {
			viewManager.draw(CornerConstants.BOTTOM_RIGHT);
		} else if(lbl.equals("Top Left")) {
			viewManager.draw(CornerConstants.TOP_LEFT);
		} else if(lbl.equals("Top Right")) {
			viewManager.draw(CornerConstants.TOP_RIGHT);
		} // if-else
   } // actionPerformed()            
} // CheckboxListener
